{{/* boolean feature tags */}}
{{- $ephemeral := false -}}{{/* true if this machine is ephemeral, e.g. a cloud or VM instance */}}
{{- $work := false -}}{{/* true if this machine is a work machine */}}
{{- $headless := false -}}{{/* true if this machine does not have a screen and keyboard */}}
{{- $personal := false -}}{{/* true if this machine should have personal secrets */}}
{{- $homebrew := false -}}
{{- "" -}}

{{- $osID := .chezmoi.os -}}
{{- if (and (eq .chezmoi.os "linux") (hasKey .chezmoi.osRelease "id")) -}}
{{-   $osID = printf "%s-%s" .chezmoi.os .chezmoi.osRelease.id -}}
{{- end -}}

{{- $wsl := (and (eq .chezmoi.os "linux") (.chezmoi.kernel.osrelease | lower | contains "microsoft")) -}}

{{/* detect GitHub codespaces, VSCode remote containers, Docker containers, Multipass VMs, and Vagrant boxes */}}
{{- if or (env "CODESPACES") (env "REMOTE_CONTAINERS_IPC") (eq .chezmoi.username "root" "ubuntu" "vagrant" "vscode") -}}
{{-   $ephemeral = true -}}
{{-   $headless = true -}}
{{- end -}}

{{/* work around unreliable hostname on darwin */}}
{{- $hostname := .chezmoi.hostname -}}
{{- if eq .chezmoi.os "darwin" -}}
{{-   $computerName := output "scutil" "--get" "ComputerName" | trim -}}
{{-   if eq $computerName "Tom’s Laptop" -}}
{{-     $hostname = "toms-laptop" -}}
{{-   else if eq $computerName "Tom’s MacBook Air" -}}
{{-     $hostname = "toms-mba" -}}
{{-   else -}}
{{-     $hostname = $computerName -}}
{{-   end -}}
{{- end -}}

{{- if eq .chezmoi.os "darwin" "linux" -}}
{{-   $homebrew = true -}}
{{- end -}}

{{- $email := "twpayne@gmail.com" -}}
{{- if $work -}}
{{-   $email = "tom.payne@flarm.com" -}}
{{- end -}}

{{- if stat (joinPath .chezmoi.homeDir "dotfiles") -}}
# Gitpod clone the repository to a this directory
sourceDir = {{ (joinPath .chezmoi.homeDir "dotfiles/home") | toToml }}
{{- else if (env "CODESPACES") -}}
# GitHub Codespaces clone the repository to a this directory
sourceDir = "/workspaces/.codespaces/.persistedshare/dotfiles/home"
{{- end }}

encryption = "age"

[age]
  identity = "~/.age.key"
  recipient = "age1hwzfym9sw8wjyckwfgul4qe6mn67h8rrkw9vfprl95nv3dd0qd7susuu8z"

[onepassword]
  prompt = false

[data]
    github_username = "atty303"
    ephemeral = {{ $ephemeral }}
    email = {{ $email | quote }}
    work = {{ $work }}
    headless = {{ $headless }}
    hostname = {{ $hostname | quote }}
    personal = {{ $personal }}
    osid = {{ $osID | quote }}
    wsl = {{ $wsl }}
    zshPlugins = [
        "per-directory-history",
        "vi-mode",
        "zsh-syntax-highlighting",
    ]
    homebrew = {{ $homebrew }}

{{- if eq .chezmoi.os "windows" -}}
{{- $allProfiles := list "essentials" "gaming" "development" -}}
{{ $profiles := promptMultichoiceOnce . "profiles" "What profiles enable" $allProfiles }}
    profiles = {{- $profiles | toToml -}}
{{ else }}
    profiles = []
{{ end }}

[git]
    autoAdd = true
    autoCommit = true

[github]
    refreshPeriod = "12h"

[interpreters.nu]
{{ if eq .chezmoi.os "linux" }}
    command = {{ joinPath (env "HOME") ".local/bin/nu" | toToml }}
{{ else if eq .chezmoi.os "darwin" }}
    command = "/opt/homebrew/bin/nu"
{{ else if eq .chezmoi.os "windows" }}
    command = {{ joinPath (env "LOCALAPPDATA") "Programs/nu/bin/nu.exe" | toToml }}
{{ else }}
    command = "nu"
{{ end }}

{{ if eq .chezmoi.os "windows" }}
[interpreters.ps1]
    command = {{ joinPath (env "PROGRAMFILES") "PowerShell/7/pwsh.exe" | toToml }}
    args = ["-NoLogo"]
{{ end }}

# Run scripts after initializing the source state and before applying the state.
[hooks.read-source-state.pre]
{{ if eq .chezmoi.os "linux" }}
    command = "/usr/bin/env"
    args = ["bash", {{ joinPath .chezmoi.sourceDir ".chezmoiscripts/linux/.init.bash" | toToml }}]
{{ end }}
{{ if eq .chezmoi.os "windows" }}
    command = {{ joinPath (env "SystemRoot") "System32/WindowsPowerShell/v1.0/powershell.exe" | toToml }}
    args = ["-NoLogo", {{ joinPath .chezmoi.sourceDir ".chezmoiscripts/windows/.init.ps1" | toToml }}]
{{ end }}
