### dot: https://github.com/ssh0/dot
if [ -L ~/.dot ]; then
  export DOT_DIR="$(dirname $(readlink ~/.dot))"
  source $DOT_DIR/dot/dot.sh
fi

### Homebrew
if [[ -f /opt/homebrew/bin/brew ]]; then
  eval "$(/opt/homebrew/bin/brew shellenv)"
fi

### Linuxbrew
if [[ -f /home/linuxbrew/.linuxbrew/bin/brew ]]; then
  eval $(/home/linuxbrew/.linuxbrew/bin/brew shellenv)
fi

### pureline: https://github.com/chris-marsh/pureline
if which starship >/dev/null 2>&1; then
  export STARSHIP_CONFIG=~/.starship.toml
  eval "$(starship init bash)"
elif [ -e ~/.pureline/pureline -a "$TERM" != "linux" ]; then
  source ~/.pureline/pureline ~/.pureline.conf
fi

### direnv
if which direnv >/dev/null 2>&1; then
  eval "$(direnv hook bash)"
fi

### anyenv
if [ -f $HOME/.anyenv/bin/anyenv ]; then
  export PATH="$HOME/.anyenv/bin:$PATH"
fi
if which anyenv >/dev/null 2>&1; then
  eval "$(anyenv init -)"
fi

### 1Password ssh-agent (WSL2)
if [[ -f /proc/sys/fs/binfmt_misc/WSLInterop ]]; then
  export SSH_AUTH_SOCK=$HOME/.1password/agent.sock
  ALREADY_RUNNING=$(ps -auxww | grep -q "[n]piperelay.exe -ei -s //./pipe/openssh-ssh-agent"; echo $?)
  if [[ $ALREADY_RUNNING != "0" ]]; then
    if [[ -S $SSH_AUTH_SOCK ]]; then
      echo "removing previous socket..."
      rm $SSH_AUTH_SOCK
    fi
  fi
  echo "Starting SSH-Agent relay..."
  (setsid socat UNIX-LISTEN:$SSH_AUTH_SOCK,fork EXEC:"/usr/local/bin/npiperelay.exe -ei -s //./pipe/openssh-ssh-agent",nofork &) >/dev/null 2>&1
fi

### Java
if [[ -f /usr/libexec/java_home ]]; then
  export JAVA_8_HOME=$(/usr/libexec/java_home -v 1.8)
  export JAVA_11_HOME=$(/usr/libexec/java_home -v 11)
  export JAVA_17_HOME=$(/usr/libexec/java_home -v 17)
  export JAVA_21_HOME=$(/usr/libexec/java_home -v 21)
  export JAVA_HOME=$JAVA_21_HOME
fi

### PATH
if [ -n "$MSYSTEM" ]; then alias _cygpath=cygpath; else alias _cygpath=echo; fi
if which node >/dev/null 2>&1 && yarn >/dev/null --version 2>&1; then
  PATH="$PATH:$(_cygpath "$(yarn global bin)")"
fi
export PATH

###
### environments
###
#export LC_ALL=ja_JP.UTF-8
export AWS_SDK_LOAD_CONFIG=true

# krypton
if which tty >/dev/null 2>&1; then
  export GPG_TTY=$(tty)
fi

# X11
if [[ -n "$WSL_DISTRO_NAME" ]]; then
  #export DISPLAY=$(cat /etc/resolv.conf | grep nameserver | cut -d' ' -f2):0.0
  setxkbmap -option srvrkeys:none
fi

# IME
if which fcitx >/dev/null 2>&1; then
  export GTK_IM_MODULE=fcitx
  export QT_IM_MODULE=fcitx
  export XMODIFIERS="@im=fcitx"
  export DefaultIMModule=fcitx

  if [[ $SHLVL = 1 ]]; then
    (fcitx-autostart >/dev/null 2>&1 &)
  fi
fi

###
### history
###
HISTSIZE=100000
HISTFILESIZE=$HISTSIZE
# Avoid duplicates
HISTCONTROL=ignoredups:erasedups
# When the shell exits, append to the history file instead of overwriting it
shopt -s histappend

# After each command, append to the history file and reread it
PROMPT_COMMAND="${PROMPT_COMMAND:+$PROMPT_COMMAND$'\n'}history -a; history -c; history -r"

# peco
peco-history() {
    local NUM=$(history | wc -l)
    local FIRST=$((-1*(NUM-1)))

    if [ $FIRST -eq 0 ]; then
        history -d $((HISTCMD-1))
        echo "No history" >&2
        return
    fi  

    local CMD=$(fc -l $FIRST | sort -k 2 -k 1nr | uniq -f 1 | sort -nr | sed -E 's/^[0-9]+[[:blank:]]+//' | peco | head -n 1)

    if [ -n "$CMD" ]; then
        history -s $CMD

        if type osascript > /dev/null 2>&1 ; then
            (osascript -e 'tell application "System Events" to keystroke (ASCII character 30)' &)
        fi  
    else
        history -d $((HISTCMD-1))
    fi
}


function peco-cd {
  local sw="1"
  while [ "$sw" != "0" ]
   do
		if [ "$sw" = "1" ];then
			local list=$(echo -e "---$PWD\n../\n$( ls -F | grep / )\n---Show hidden directory\n---Show files, $(echo $(ls -F | grep -v / ))\n---HOME DIRECTORY")
		elif [ "$sw" = "2" ];then
			local list=$(echo -e "---$PWD\n$( ls -a -F | grep / | sed 1d )\n---Hide hidden directory\n---Show files, $(echo $(ls -F | grep -v / ))\n---HOME DIRECTORY")
		else
			local list=$(echo -e "---BACK\n$( ls -F | grep -v / )")
		fi

		local slct=$(echo -e "$list" | peco )

		if [ "$slct" = "---$PWD" ];then
			local sw="0"
		elif [ "$slct" = "---Hide hidden directory" ];then
			local sw="1"
		elif [ "$slct" = "---Show hidden directory" ];then
			local sw="2"
		elif [ "$slct" = "---Show files, $(echo $(ls -F | grep -v / ))" ];then
			local sw=$(($sw+2))
		elif [ "$slct" = "---HOME DIRECTORY" ];then
			cd "$HOME"
		elif [[ "$slct" =~ / ]];then
			cd "$slct"
		elif [ "$slct" = "" ];then
			:
		else
			local sw=$(($sw-2))
		fi
   done
}
alias sd='peco-cd'

function ghq-look {
  local dir=$(ghq list -p | fzf --ansi)
  if [ -n "$dir" ]; then
    cd $dir
  fi
}
alias gl='ghq-look'

if which brew >/dev/null 2>&1; then
  if [ -f $(brew --prefix)/etc/bash_completion ]; then
    . $(brew --prefix)/etc/bash_completion
  fi
fi

if [[ -n "$WSL_DISTRO_NAME" ]]; then
  alias open="powershell.exe /c start"
fi

alias m="mask --maskfile README.md"
. "$HOME/.cargo/env"
